---
deploy-to-aws-cloudfront:
  docker:
    - image: 'circleci/node:latest'
  steps:
    - checkout
    - command: 'echo ${CURRENT_BRANCH}'
      name: 'Show current branch'
      run: ~
    - command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python-pip python-dev build-essential
      name: 'Installing AWS CLI'
      run: ~
      working_directory: /
    - command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r * .[^.]*
        echo "Build successful"
      name: 'Build Project'
      run: ~
    - command: |
        aws configure set preview.cloudfront 
        if [ "${CURRENT_BRANCH}" == "master" ]
        then
          aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
        elif [ "${CURRENT_BRANCH}" == "staging" ]
        then
          aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
        else
          aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
        fi
      name: 'Deploy to AWS Cloudfront'
      run: ~
  working_directory: ~/repo
deploy-to-aws-s3:
  docker:
    - image: 'circleci/node:latest'
  steps:
    - checkout
    - command: 'echo ${CURRENT_BRANCH}'
      name: 'Show current branch'
      run: ~
    - command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python-pip python-dev build-essential
      name: 'Installing AWS CLI'
      run: ~
      working_directory: /
    - command: |
        npm install
        npm run build
        cd build
        zip ../build.zip -r * .[^.]*
        echo "Build successful"
      name: 'Build Project'
      run: ~
    - command: |
        if [ "${CURRENT_BRANCH}" == "master" ]
        then
          aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_PROD_BUCKET} --delete
        elif [ "${CURRENT_BRANCH}" == "staging" ]
        then
          aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_STAGING_BUCKET} --delete
        else
          aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete
        fi
      name: 'Deploy to AWS S3'
      run: ~
  working_directory: ~/repo
jobs:
  build:
    docker:
      - image: 'circleci/node:latest'
    steps:
      - checkout
      - command: 'echo ${CURRENT_BRANCH}'
        name: 'Show current branch'
        run: ~
      - keys:
          - 'app-{{ checksum "package.json"}}'
          - app-
        restore_cache: ~
      - command: 'npm install'
        name: 'Install deps'
        run: ~
      - key: 'app-{{ checksum "package.json" }}'
        paths:
          - node_modules
        save_cache: ~
    working_directory: ~/repo
version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3: ~
        filters:
          branches:
            only:
              - dev
              - staging
              - master
        requires:
          - build
      - deploy-to-aws-cloudfront: ~
        filters:
          branches:
            only:
              - dev
              - staging
              - master
        requires:
          - deploy-to-aws-s3
